{"randomdocline":"Check if the class can be instantiated by unsafe allocator. If the instance has interface or abstract modifiers","signature":" static void assertInstantiable(Class<?> c)","doc":"Check if the class can be instantiated by unsafe allocator. If the instance has interface or abstract modifiers\r\nthrow an {@link java.lang.UnsupportedOperationException}\r\n\r\n@param c instance of the class to be checked\r\n","source":"{\r\n    int modifiers = c.getModifiers();\r\n    if (Modifier.isInterface(modifiers)) {\r\n        throw new UnsupportedOperationException(\"Interface can't be instantiated! Interface name: \" + c.getName());\r\n    }\r\n    if (Modifier.isAbstract(modifiers)) {\r\n        throw new UnsupportedOperationException(\"Abstract class can't be instantiated! Class name: \" + c.getName());\r\n    }\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\gson\\gson\/src\/main\/java\/com\/google\/gson\/internal\/UnsafeAllocator.java"}