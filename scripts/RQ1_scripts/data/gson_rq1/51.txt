{"randomdocline":"@param millis true to include millis precision otherwise false","signature":"private static String format(Date date, boolean millis, TimeZone tz)","doc":"Format date into yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]\r\n\r\n@param date the date to format\r\n@param millis true to include millis precision otherwise false\r\n@param tz timezone to use for the formatting (GMT will produce 'Z')\r\n@return the date formatted as yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]\r\n","source":"{\r\n    Calendar calendar = new GregorianCalendar(tz, Locale.US);\r\n    calendar.setTime(date);\r\n    \/\/ estimate capacity of buffer as close as we can (yeah, that's pedantic ;)\r\n    int capacity = \"yyyy-MM-ddThh:mm:ss\".length();\r\n    capacity += millis ? \".sss\".length() : 0;\r\n    capacity += tz.getRawOffset() == 0 ? \"Z\".length() : \"+hh:mm\".length();\r\n    StringBuilder formatted = new StringBuilder(capacity);\r\n    padInt(formatted, calendar.get(Calendar.YEAR), \"yyyy\".length());\r\n    formatted.append('-');\r\n    padInt(formatted, calendar.get(Calendar.MONTH) + 1, \"MM\".length());\r\n    formatted.append('-');\r\n    padInt(formatted, calendar.get(Calendar.DAY_OF_MONTH), \"dd\".length());\r\n    formatted.append('T');\r\n    padInt(formatted, calendar.get(Calendar.HOUR_OF_DAY), \"hh\".length());\r\n    formatted.append(':');\r\n    padInt(formatted, calendar.get(Calendar.MINUTE), \"mm\".length());\r\n    formatted.append(':');\r\n    padInt(formatted, calendar.get(Calendar.SECOND), \"ss\".length());\r\n    if (millis) {\r\n        formatted.append('.');\r\n        padInt(formatted, calendar.get(Calendar.MILLISECOND), \"sss\".length());\r\n    }\r\n    int offset = tz.getOffset(calendar.getTimeInMillis());\r\n    if (offset != 0) {\r\n        int hours = Math.abs((offset \/ (60 * 1000)) \/ 60);\r\n        int minutes = Math.abs((offset \/ (60 * 1000)) % 60);\r\n        formatted.append(offset < 0 ? '-' : '+');\r\n        padInt(formatted, hours, \"hh\".length());\r\n        formatted.append(':');\r\n        padInt(formatted, minutes, \"mm\".length());\r\n    } else {\r\n        formatted.append('Z');\r\n    }\r\n    return formatted.toString();\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\gson\\extras\/src\/main\/java\/com\/google\/gson\/typeadapters\/UtcDateTypeAdapter.java"}
'bcd52a1f'
'0e3708be'