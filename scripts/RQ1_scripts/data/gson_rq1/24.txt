{"randomdocline":"Takes a reader in any state and returns the next value as a JsonElement.","signature":"public static JsonElement parse(JsonReader reader) throws JsonParseException","doc":"Takes a reader in any state and returns the next value as a JsonElement.\r\n","source":"{\r\n    boolean isEmpty = true;\r\n    try {\r\n        reader.peek();\r\n        isEmpty = false;\r\n        return TypeAdapters.JSON_ELEMENT.read(reader);\r\n    } catch (EOFException e) {\r\n        \/*\r\n       * For compatibility with JSON 1.5 and earlier, we return a JsonNull for\r\n       * empty documents instead of throwing.\r\n       *\/\r\n        if (isEmpty) {\r\n            return JsonNull.INSTANCE;\r\n        }\r\n        \/\/ The stream ended prematurely so it is likely a syntax error.\r\n        throw new JsonSyntaxException(e);\r\n    } catch (MalformedJsonException e) {\r\n        throw new JsonSyntaxException(e);\r\n    } catch (IOException e) {\r\n        throw new JsonIOException(e);\r\n    } catch (NumberFormatException e) {\r\n        throw new JsonSyntaxException(e);\r\n    }\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\gson\\gson\/src\/main\/java\/com\/google\/gson\/internal\/Streams.java"}