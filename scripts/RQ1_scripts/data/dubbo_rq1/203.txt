{"randomdocline":"Find the merger according to the returnType class, the merger will","signature":"public static Merger<T> getMerger(Class<T> returnType)","doc":"Find the merger according to the returnType class, the merger will\r\nmerge an array of returnType into one\r\n\r\n@param returnType the merger will return this type\r\n@return the merger which merges an array of returnType into one, return null if not exist\r\n@throws IllegalArgumentException if returnType is null\r\n","source":"{\r\n    if (returnType == null) {\r\n        throw new IllegalArgumentException(\"returnType is null\");\r\n    }\r\n    Merger result;\r\n    if (returnType.isArray()) {\r\n        Class type = returnType.getComponentType();\r\n        result = MERGER_CACHE.get(type);\r\n        if (result == null) {\r\n            loadMergers();\r\n            result = MERGER_CACHE.get(type);\r\n        }\r\n        if (result == null && !type.isPrimitive()) {\r\n            result = ArrayMerger.INSTANCE;\r\n        }\r\n    } else {\r\n        result = MERGER_CACHE.get(returnType);\r\n        if (result == null) {\r\n            loadMergers();\r\n            result = MERGER_CACHE.get(returnType);\r\n        }\r\n    }\r\n    return result;\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\dubbo\\dubbo-cluster\/src\/main\/java\/org\/apache\/dubbo\/rpc\/cluster\/merger\/MergerFactory.java"}
'61eff5986'