{"randomdocline":"@param certPath the path to the certificate authority file","signature":" static KeyStore create(Path certPath, Path keyPath, String alias)","doc":"Create a new {@link KeyStore} populated with the certificate stored at the\r\nspecified file path and an optional private key.\r\n\r\n@param certPath the path to the certificate authority file\r\n@param keyPath the path to the private file\r\n@param alias the alias to use for KeyStore entries\r\n@return the {@code KeyStore}\r\n","source":"{\r\n    try {\r\n        KeyStore keyStore = getKeyStore();\r\n        X509Certificate[] certificates = CertificateParser.parse(certPath);\r\n        PrivateKey privateKey = getPrivateKey(keyPath);\r\n        try {\r\n            addCertificates(keyStore, certificates, privateKey, alias);\r\n        } catch (KeyStoreException ex) {\r\n            throw new IllegalStateException(\"Error adding certificates to KeyStore: \" + ex.getMessage(), ex);\r\n        }\r\n        return keyStore;\r\n    } catch (GeneralSecurityException | IOException ex) {\r\n        throw new IllegalStateException(\"Error creating KeyStore: \" + ex.getMessage(), ex);\r\n    }\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\spring-boot\\spring-boot-project\/spring-boot-tools\/spring-boot-buildpack-platform\/src\/main\/java\/org\/springframework\/boot\/buildpack\/platform\/docker\/ssl\/KeyStoreFactory.java"}
'ed6e54218d'