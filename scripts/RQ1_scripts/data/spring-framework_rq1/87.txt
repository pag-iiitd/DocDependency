{"randomdocline":"Intercept the given request, and return a response future. The given","signature":" ListenableFuture<ClientHttpResponse> intercept(HttpRequest request, byte[] body, AsyncClientHttpRequestExecution execution) throws IOException","doc":"Intercept the given request, and return a response future. The given\r\n{@link AsyncClientHttpRequestExecution} allows the interceptor to pass on\r\nthe request to the next entity in the chain.\r\n<p>An implementation might follow this pattern:\r\n<ol>\r\n<li>Examine the {@linkplain HttpRequest request} and body<\/li>\r\n<li>Optionally {@linkplain org.springframework.http.client.support.HttpRequestWrapper\r\nwrap} the request to filter HTTP attributes.<\/li>\r\n<li>Optionally modify the body of the request.<\/li>\r\n<li>One of the following:\r\n<ul>\r\n<li>execute the request through {@link ClientHttpRequestExecution}<\/li>\r\n<li>don't execute the request to block the execution altogether<\/li>\r\n<\/ul>\r\n<li>Optionally adapt the response to filter HTTP attributes with the help of\r\n{@link org.springframework.util.concurrent.ListenableFutureAdapter\r\nListenableFutureAdapter}.<\/li>\r\n<\/ol>\r\n\r\n@param request the request, containing method, URI, and headers\r\n@param body the body of the request\r\n@param execution the request execution\r\n@return the response future\r\n@throws IOException in case of I\/O errors\r\n","source":"","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\spring-framework\\spring-web\/src\/main\/java\/org\/springframework\/http\/client\/AsyncClientHttpRequestInterceptor.java"}
'258cc7b27f'