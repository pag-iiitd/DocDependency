{"randomdocline":"Determine whether the given class is a candidate for transaction attributes","signature":" boolean isCandidateClass(Class<?> targetClass)","doc":"Determine whether the given class is a candidate for transaction attributes\r\nin the metadata format of this {@code TransactionAttributeSource}.\r\n<p>If this method returns {@code false}, the methods on the given class\r\nwill not get traversed for {@link #getTransactionAttribute} introspection.\r\nReturning {@code false} is therefore an optimization for non-affected\r\nclasses, whereas {@code true} simply means that the class needs to get\r\nfully introspected for each method on the given class individually.\r\n\r\n@param targetClass the class to introspect\r\n@return {@code false} if the class is known to have no transaction\r\nattributes at class or method level; {@code true} otherwise. The default\r\nimplementation returns {@code true}, leading to regular introspection.\r\n@since 5.2\r\n","source":"{\r\n    return true;\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\spring-framework\\spring-tx\/src\/main\/java\/org\/springframework\/transaction\/interceptor\/TransactionAttributeSource.java"}
'e3a9826e56'