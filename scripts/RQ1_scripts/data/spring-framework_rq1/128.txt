{"randomdocline":"Return readers that support specific types.","signature":" final List<HttpMessageReader<?>> getTypedReaders()","doc":"Return readers that support specific types.\r\n","source":"{\r\n    if (!this.registerDefaults) {\r\n        return Collections.emptyList();\r\n    }\r\n    List<HttpMessageReader<?>> readers = new ArrayList<>();\r\n    addCodec(readers, new DecoderHttpMessageReader<>(new ByteArrayDecoder()));\r\n    addCodec(readers, new DecoderHttpMessageReader<>(new ByteBufferDecoder()));\r\n    addCodec(readers, new DecoderHttpMessageReader<>(new DataBufferDecoder()));\r\n    if (nettyByteBufPresent) {\r\n        addCodec(readers, new DecoderHttpMessageReader<>(new NettyByteBufDecoder()));\r\n    }\r\n    addCodec(readers, new ResourceHttpMessageReader(new ResourceDecoder()));\r\n    addCodec(readers, new DecoderHttpMessageReader<>(StringDecoder.textPlainOnly()));\r\n    if (protobufPresent) {\r\n        addCodec(readers, new DecoderHttpMessageReader<>(this.protobufDecoder != null ? (ProtobufDecoder) this.protobufDecoder : new ProtobufDecoder()));\r\n    }\r\n    addCodec(readers, new FormHttpMessageReader());\r\n    \/\/ client vs server..\r\n    extendTypedReaders(readers);\r\n    return readers;\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\spring-framework\\spring-web\/src\/main\/java\/org\/springframework\/http\/codec\/support\/BaseDefaultCodecs.java"}
'9b496b1264'