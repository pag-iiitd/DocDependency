{"randomdocline":"{@linkplain #setExecutor(Executor) default executor} should be used","signature":"protected String getExecutorQualifier(Method method)","doc":"Return the qualifier or bean name of the executor to be used when executing the\r\ngiven method, specified via {@link Async#value} at the method or declaring\r\nclass level. If {@code @Async} is specified at both the method and class level, the\r\nmethod's {@code #value} takes precedence (even if empty string, indicating that\r\nthe default executor should be used preferentially).\r\n\r\n@param method the method to inspect for executor qualifier metadata\r\n@return the qualifier if specified, otherwise empty string indicating that the\r\n{@linkplain #setExecutor(Executor) default executor} should be used\r\n@see #determineAsyncExecutor(Method)\r\n","source":"{\r\n    \/\/ Maintainer's note: changes made here should also be made in\r\n    \/\/ AnnotationAsyncExecutionAspect#getExecutorQualifier\r\n    Async async = AnnotatedElementUtils.findMergedAnnotation(method, Async.class);\r\n    if (async == null) {\r\n        async = AnnotatedElementUtils.findMergedAnnotation(method.getDeclaringClass(), Async.class);\r\n    }\r\n    return (async != null ? async.value() : null);\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\spring-framework\\spring-context\/src\/main\/java\/org\/springframework\/scheduling\/annotation\/AnnotationAsyncExecutionInterceptor.java"}
'8b2d9951e0'
'ed0576c181'