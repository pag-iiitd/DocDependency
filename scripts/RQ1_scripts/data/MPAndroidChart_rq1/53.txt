{"randomdocline":"Draws the RadarDataSet","signature":"protected void drawDataSet(Canvas c, IRadarDataSet dataSet, int mostEntries)","doc":"Draws the RadarDataSet\r\n\r\n@param c\r\n@param dataSet\r\n@param mostEntries the entry count of the dataset with the most entries\r\n","source":"{\r\n    float phaseX = mAnimator.getPhaseX();\r\n    float phaseY = mAnimator.getPhaseY();\r\n    float sliceangle = mChart.getSliceAngle();\r\n    \/\/ calculate the factor that is needed for transforming the value to\r\n    \/\/ pixels\r\n    float factor = mChart.getFactor();\r\n    MPPointF center = mChart.getCenterOffsets();\r\n    MPPointF pOut = MPPointF.getInstance(0, 0);\r\n    Path surface = mDrawDataSetSurfacePathBuffer;\r\n    surface.reset();\r\n    boolean hasMovedToPoint = false;\r\n    for (int j = 0; j < dataSet.getEntryCount(); j++) {\r\n        mRenderPaint.setColor(dataSet.getColor(j));\r\n        RadarEntry e = dataSet.getEntryForIndex(j);\r\n        Utils.getPosition(center, (e.getY() - mChart.getYChartMin()) * factor * phaseY, sliceangle * j * phaseX + mChart.getRotationAngle(), pOut);\r\n        if (Float.isNaN(pOut.x))\r\n            continue;\r\n        if (!hasMovedToPoint) {\r\n            surface.moveTo(pOut.x, pOut.y);\r\n            hasMovedToPoint = true;\r\n        } else\r\n            surface.lineTo(pOut.x, pOut.y);\r\n    }\r\n    if (dataSet.getEntryCount() > mostEntries) {\r\n        \/\/ if this is not the largest set, draw a line to the center before closing\r\n        surface.lineTo(center.x, center.y);\r\n    }\r\n    surface.close();\r\n    if (dataSet.isDrawFilledEnabled()) {\r\n        final Drawable drawable = dataSet.getFillDrawable();\r\n        if (drawable != null) {\r\n            drawFilledPath(c, surface, drawable);\r\n        } else {\r\n            drawFilledPath(c, surface, dataSet.getFillColor(), dataSet.getFillAlpha());\r\n        }\r\n    }\r\n    mRenderPaint.setStrokeWidth(dataSet.getLineWidth());\r\n    mRenderPaint.setStyle(Paint.Style.STROKE);\r\n    \/\/ draw the line (only if filled is disabled or alpha is below 255)\r\n    if (!dataSet.isDrawFilledEnabled() || dataSet.getFillAlpha() < 255)\r\n        c.drawPath(surface, mRenderPaint);\r\n    MPPointF.recycleInstance(center);\r\n    MPPointF.recycleInstance(pOut);\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\MPAndroidChart\\MPChartLib\/src\/main\/java\/com\/github\/mikephil\/charting\/renderer\/RadarChartRenderer.java"}