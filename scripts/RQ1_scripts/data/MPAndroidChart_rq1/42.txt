{"randomdocline":"@param set","signature":"public Highlight getStackedHighlight(Highlight high, IBarDataSet set, float xVal, float yVal)","doc":"This method creates the Highlight object that also indicates which value of a stacked BarEntry has been\r\nselected.\r\n\r\n@param high the Highlight to work with looking for stacked values\r\n@param set\r\n@param xVal\r\n@param yVal\r\n@return\r\n","source":"{\r\n    BarEntry entry = set.getEntryForXValue(xVal, yVal);\r\n    if (entry == null)\r\n        return null;\r\n    \/\/ not stacked\r\n    if (entry.getYVals() == null) {\r\n        return high;\r\n    } else {\r\n        Range[] ranges = entry.getRanges();\r\n        if (ranges.length > 0) {\r\n            int stackIndex = getClosestStackIndex(ranges, yVal);\r\n            MPPointD pixels = mChart.getTransformer(set.getAxisDependency()).getPixelForValues(high.getX(), ranges[stackIndex].to);\r\n            Highlight stackedHigh = new Highlight(entry.getX(), entry.getY(), (float) pixels.x, (float) pixels.y, high.getDataSetIndex(), stackIndex, high.getAxis());\r\n            MPPointD.recycleInstance(pixels);\r\n            return stackedHigh;\r\n        }\r\n    }\r\n    return null;\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\MPAndroidChart\\MPChartLib\/src\/main\/java\/com\/github\/mikephil\/charting\/highlight\/BarHighlighter.java"}