{"randomdocline":"@return true if successful, false if the caller should continue with the regular path.","signature":"public static boolean tryScalarXMapSubscribe(ObservableSource<T> source, Observer<? super R> observer, Function<? super T, ? extends ObservableSource<? extends R>> mapper)","doc":"Tries to subscribe to a possibly Supplier source's mapped ObservableSource.\r\n\r\n@param <T> the input value type\r\n@param <R> the output value type\r\n@param source the source ObservableSource\r\n@param observer the subscriber\r\n@param mapper the function mapping a scalar value into an ObservableSource\r\n@return true if successful, false if the caller should continue with the regular path.\r\n","source":"{\r\n    if (source instanceof Supplier) {\r\n        T t;\r\n        try {\r\n            t = ((Supplier<T>) source).get();\r\n        } catch (Throwable ex) {\r\n            Exceptions.throwIfFatal(ex);\r\n            EmptyDisposable.error(ex, observer);\r\n            return true;\r\n        }\r\n        if (t == null) {\r\n            EmptyDisposable.complete(observer);\r\n            return true;\r\n        }\r\n        ObservableSource<? extends R> r;\r\n        try {\r\n            r = Objects.requireNonNull(mapper.apply(t), \"The mapper returned a null ObservableSource\");\r\n        } catch (Throwable ex) {\r\n            Exceptions.throwIfFatal(ex);\r\n            EmptyDisposable.error(ex, observer);\r\n            return true;\r\n        }\r\n        if (r instanceof Supplier) {\r\n            R u;\r\n            try {\r\n                u = ((Supplier<R>) r).get();\r\n            } catch (Throwable ex) {\r\n                Exceptions.throwIfFatal(ex);\r\n                EmptyDisposable.error(ex, observer);\r\n                return true;\r\n            }\r\n            if (u == null) {\r\n                EmptyDisposable.complete(observer);\r\n                return true;\r\n            }\r\n            ScalarDisposable<R> sd = new ScalarDisposable<>(observer, u);\r\n            observer.onSubscribe(sd);\r\n            sd.run();\r\n        } else {\r\n            r.subscribe(observer);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\RxJava\\src\/main\/java\/io\/reactivex\/rxjava3\/internal\/operators\/observable\/ObservableScalarXMap.java"}
'a1693ecc9'
'7a1a4afad'
'4dbd7351c'