{"randomdocline":"the items start to arrive, the internal array won't need to grow, creating less garbage and no overhead","signature":"public static ReplaySubject<T> create(int capacityHint)","doc":"Creates an unbounded replay subject with the specified initial buffer capacity.\r\n<p>\r\nUse this method to avoid excessive array reallocation while the internal buffer grows to accommodate new\r\nitems. For example, if you know that the buffer will hold 32k items, you can ask the\r\n{@code ReplaySubject} to preallocate its internal array with a capacity to hold that many items. Once\r\nthe items start to arrive, the internal array won't need to grow, creating less garbage and no overhead\r\ndue to frequent array-copying.\r\n\r\n@param <T> the type of items observed and emitted by the Subject\r\n@param capacityHint the initial buffer capacity\r\n@return the created subject\r\n@throws IllegalArgumentException if {@code capacityHint} is non-positive\r\n","source":"{\r\n    ObjectHelper.verifyPositive(capacityHint, \"capacityHint\");\r\n    return new ReplaySubject<>(new UnboundedReplayBuffer<>(capacityHint));\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\RxJava\\src\/main\/java\/io\/reactivex\/rxjava3\/subjects\/ReplaySubject.java"}
'a1693ecc9'
'fba05ea81'
'639cbc529'
'6eeb24901'