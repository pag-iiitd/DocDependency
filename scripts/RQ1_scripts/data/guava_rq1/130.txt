{"randomdocline":"  <li>{@code isCancelled()} must return {@code false}","signature":"public static Throwable tryInternalFastPathGetFailure(InternalFutureFailureAccess future)","doc":"Usually returns {@code null} but, if the given {@code Future} has failed, may <i>optionally<\/i>\r\nreturn the cause of the failure. \"Failure\" means specifically \"completed with an exception\"; it\r\ndoes not include \"was cancelled.\" To be explicit: If this method returns a non-null value,\r\nthen:\r\n\r\n<ul>\r\n  <li>{@code isDone()} must return {@code true}\r\n  <li>{@code isCancelled()} must return {@code false}\r\n  <li>{@code get()} must not block, and it must throw an {@code ExecutionException} with the\r\n      return value of this method as its cause\r\n<\/ul>\r\n","source":"{\r\n    return future.tryInternalFastPathGetFailure();\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\guava\\futures\/failureaccess\/src\/com\/google\/common\/util\/concurrent\/internal\/InternalFutures.java"}
'b62d52926b'