{"randomdocline":"completion.","signature":"public static ExecutorService getExitingExecutorService(ThreadPoolExecutor executor)","doc":"Converts the given ThreadPoolExecutor into an ExecutorService that exits when the application\r\nis complete. It does so by using daemon threads and adding a shutdown hook to wait for their\r\ncompletion.\r\n\r\n<p>This method waits 120 seconds before continuing with JVM termination, even if the executor\r\nhas not finished its work.\r\n\r\n<p>This is mainly for fixed thread pools. See {@link Executors#newFixedThreadPool(int)}.\r\n\r\n@param executor the executor to modify to make sure it exits when the application is finished\r\n@return an unmodifiable version of the input which will not hang the JVM\r\n","source":"{\r\n    return new Application().getExitingExecutorService(executor);\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\guava\\android\/guava\/src\/com\/google\/common\/util\/concurrent\/MoreExecutors.java"}
'a772418be2'
'5dea327a8c'
'9b94fb3965'
'63360f3f58'
'a7e9bf049e'
'83e833e665'
'57bcd2456c'
'99d2816f0a'
'353ae349a2'
'd8d8ef522d'
'b00fc801c4'
'1e8985b92e'
'ee071f342e'
'dc5915eb10'