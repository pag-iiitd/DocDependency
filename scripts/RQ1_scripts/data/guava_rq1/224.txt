{"randomdocline":"@since 23.6","signature":"public static boolean awaitUninterruptibly(Condition condition, long timeout, TimeUnit unit)","doc":"Invokes {@code condition.}{@link Condition#await(long, TimeUnit) await(timeout, unit)}\r\nuninterruptibly.\r\n\r\n@since 23.6\r\n","source":"{\r\n    boolean interrupted = false;\r\n    try {\r\n        long remainingNanos = unit.toNanos(timeout);\r\n        long end = System.nanoTime() + remainingNanos;\r\n        while (true) {\r\n            try {\r\n                return condition.await(remainingNanos, NANOSECONDS);\r\n            } catch (InterruptedException e) {\r\n                interrupted = true;\r\n                remainingNanos = end - System.nanoTime();\r\n            }\r\n        }\r\n    } finally {\r\n        if (interrupted) {\r\n            Thread.currentThread().interrupt();\r\n        }\r\n    }\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\guava\\android\/guava\/src\/com\/google\/common\/util\/concurrent\/Uninterruptibles.java"}
'5cb62f8b84'