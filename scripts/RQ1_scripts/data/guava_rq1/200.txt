{"randomdocline":"  <li>the {@linkplain ClassLoader#getSystemClassLoader() system class loader}. To search the","signature":"public static ClassPath from(ClassLoader classloader) throws IOException","doc":"Returns a {@code ClassPath} representing all classes and resources loadable from {@code\r\nclassloader} and its ancestor class loaders.\r\n\r\n<p><b>Warning:<\/b> {@code ClassPath} can find classes and resources only from:\r\n\r\n<ul>\r\n  <li>{@link URLClassLoader} instances' {@code file:} URLs\r\n  <li>the {@linkplain ClassLoader#getSystemClassLoader() system class loader}. To search the\r\n      system class loader even when it is not a {@link URLClassLoader} (as in Java 9), {@code\r\n      ClassPath} searches the files from the {@code java.class.path} system property.\r\n<\/ul>\r\n\r\n@throws IOException if the attempt to read class path resources (jar files or directories)\r\n    failed.\r\n","source":"{\r\n    DefaultScanner scanner = new DefaultScanner();\r\n    scanner.scan(classloader);\r\n    return new ClassPath(scanner.getResources());\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\guava\\guava\/src\/com\/google\/common\/reflect\/ClassPath.java"}
'63898e263d'