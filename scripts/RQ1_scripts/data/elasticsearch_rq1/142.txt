{"randomdocline":"Intercepts and blocks the {@link TransportVerifyShardBeforeCloseAction} executed for the given index pattern.","signature":"private Releasable interceptVerifyShardBeforeCloseActions(final String indexPattern, final Runnable onIntercept)","doc":"Intercepts and blocks the {@link TransportVerifyShardBeforeCloseAction} executed for the given index pattern.\r\n","source":"{\r\n    final MockTransportService mockTransportService = (MockTransportService) internalCluster().getInstance(TransportService.class, internalCluster().getMasterName());\r\n    final CountDownLatch release = new CountDownLatch(1);\r\n    for (DiscoveryNode node : internalCluster().clusterService().state().getNodes()) {\r\n        mockTransportService.addSendBehavior(internalCluster().getInstance(TransportService.class, node.getName()), (connection, requestId, action, request, options) -> {\r\n            if (action.startsWith(TransportVerifyShardBeforeCloseAction.NAME)) {\r\n                if (request instanceof TransportVerifyShardBeforeCloseAction.ShardRequest) {\r\n                    final String index = ((TransportVerifyShardBeforeCloseAction.ShardRequest) request).shardId().getIndexName();\r\n                    if (Glob.globMatch(indexPattern, index)) {\r\n                        logger.info(\"request {} intercepted for index {}\", requestId, index);\r\n                        onIntercept.run();\r\n                        try {\r\n                            release.await();\r\n                            logger.info(\"request {} released for index {}\", requestId, index);\r\n                        } catch (final InterruptedException e) {\r\n                            throw new AssertionError(e);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            connection.sendRequest(requestId, action, request, options);\r\n        });\r\n    }\r\n    final RunOnce releaseOnce = new RunOnce(release::countDown);\r\n    return releaseOnce::run;\r\n}","pathname":"D:\\Documents\\PA_Research\\DocModularity_Study\\elasticsearch\\server\/src\/internalClusterTest\/java\/org\/elasticsearch\/indices\/state\/ReopenWhileClosingIT.java"}